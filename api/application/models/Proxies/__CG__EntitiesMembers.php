<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Members extends \Entities\Members implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array('tableId' => NULL, 'password' => NULL, 'registrationDate' => NULL, 'lastVisitDate' => NULL, 'memberType' => NULL, 'status' => NULL, 'email' => NULL, 'gcmId' => NULL, 'apnId' => NULL, 'otp' => NULL, 'designation' => NULL);



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->tableId, $this->password, $this->registrationDate, $this->lastVisitDate, $this->memberType, $this->status, $this->email, $this->gcmId, $this->apnId, $this->otp, $this->designation);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'memberId', 'tableId', 'password', 'registrationDate', 'lastVisitDate', 'memberType', 'status', 'email', 'gcmId', 'apnId', 'otp', 'designation');
        }

        return array('__isInitialized__', 'memberId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Members $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->tableId, $this->password, $this->registrationDate, $this->lastVisitDate, $this->memberType, $this->status, $this->email, $this->gcmId, $this->apnId, $this->otp, $this->designation);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getMemberId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getMemberId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberId', array());

        return parent::getMemberId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTableId($tableId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTableId', array($tableId));

        return parent::setTableId($tableId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTableId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTableId', array());

        return parent::getTableId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationDate($registrationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationDate', array($registrationDate));

        return parent::setRegistrationDate($registrationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationDate', array());

        return parent::getRegistrationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastVisitDate($lastVisitDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastVisitDate', array($lastVisitDate));

        return parent::setLastVisitDate($lastVisitDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastVisitDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastVisitDate', array());

        return parent::getLastVisitDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberType($memberType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberType', array($memberType));

        return parent::setMemberType($memberType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberType', array());

        return parent::getMemberType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setGcmId($gcmId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGcmId', array($gcmId));

        return parent::setGcmId($gcmId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGcmId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGcmId', array());

        return parent::getGcmId();
    }

    /**
     * {@inheritDoc}
     */
    public function setApnId($apnId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApnId', array($apnId));

        return parent::setApnId($apnId);
    }

    /**
     * {@inheritDoc}
     */
    public function getApnId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApnId', array());

        return parent::getApnId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOtp($otp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOtp', array($otp));

        return parent::setOtp($otp);
    }

    /**
     * {@inheritDoc}
     */
    public function getOtp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOtp', array());

        return parent::getOtp();
    }

    /**
     * {@inheritDoc}
     */
    public function setDesignation($designation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDesignation', array($designation));

        return parent::setDesignation($designation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDesignation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDesignation', array());

        return parent::getDesignation();
    }

}
