<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Events extends \Entities\Events implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Entities\\Events' . "\0" . 'eventId', '' . "\0" . 'Entities\\Events' . "\0" . 'eventName', '' . "\0" . 'Entities\\Events' . "\0" . 'type', '' . "\0" . 'Entities\\Events' . "\0" . 'shortDesc', '' . "\0" . 'Entities\\Events' . "\0" . 'longDesc', '' . "\0" . 'Entities\\Events' . "\0" . 'eventDate', '' . "\0" . 'Entities\\Events' . "\0" . 'eventTime', '' . "\0" . 'Entities\\Events' . "\0" . 'eventVenue', '' . "\0" . 'Entities\\Events' . "\0" . 'createdOn', '' . "\0" . 'Entities\\Events' . "\0" . 'family', '' . "\0" . 'Entities\\Events' . "\0" . 'bigUrl', '' . "\0" . 'Entities\\Events' . "\0" . 'thumbUrl', '' . "\0" . 'Entities\\Events' . "\0" . 'status', '' . "\0" . 'Entities\\Events' . "\0" . 'member', '' . "\0" . 'Entities\\Events' . "\0" . 'memberId');
        }

        return array('__isInitialized__', '' . "\0" . 'Entities\\Events' . "\0" . 'eventId', '' . "\0" . 'Entities\\Events' . "\0" . 'eventName', '' . "\0" . 'Entities\\Events' . "\0" . 'type', '' . "\0" . 'Entities\\Events' . "\0" . 'shortDesc', '' . "\0" . 'Entities\\Events' . "\0" . 'longDesc', '' . "\0" . 'Entities\\Events' . "\0" . 'eventDate', '' . "\0" . 'Entities\\Events' . "\0" . 'eventTime', '' . "\0" . 'Entities\\Events' . "\0" . 'eventVenue', '' . "\0" . 'Entities\\Events' . "\0" . 'createdOn', '' . "\0" . 'Entities\\Events' . "\0" . 'family', '' . "\0" . 'Entities\\Events' . "\0" . 'bigUrl', '' . "\0" . 'Entities\\Events' . "\0" . 'thumbUrl', '' . "\0" . 'Entities\\Events' . "\0" . 'status', '' . "\0" . 'Entities\\Events' . "\0" . 'member', '' . "\0" . 'Entities\\Events' . "\0" . 'memberId');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Events $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getEventId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getEventId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventId', array());

        return parent::getEventId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventName($eventName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventName', array($eventName));

        return parent::setEventName($eventName);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventName', array());

        return parent::getEventName();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortDesc($shortDesc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortDesc', array($shortDesc));

        return parent::setShortDesc($shortDesc);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDesc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDesc', array());

        return parent::getShortDesc();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongDesc($longDesc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongDesc', array($longDesc));

        return parent::setLongDesc($longDesc);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongDesc()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongDesc', array());

        return parent::getLongDesc();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventDate($eventDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventDate', array($eventDate));

        return parent::setEventDate($eventDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventDate', array());

        return parent::getEventDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventTime($eventTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventTime', array($eventTime));

        return parent::setEventTime($eventTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventTime', array());

        return parent::getEventTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventVenue($eventVenue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventVenue', array($eventVenue));

        return parent::setEventVenue($eventVenue);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventVenue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventVenue', array());

        return parent::getEventVenue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedOn($createdOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedOn', array($createdOn));

        return parent::setCreatedOn($createdOn);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedOn', array());

        return parent::getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setFamily($family)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFamily', array($family));

        return parent::setFamily($family);
    }

    /**
     * {@inheritDoc}
     */
    public function getFamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFamily', array());

        return parent::getFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function setBigUrl($bigUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBigUrl', array($bigUrl));

        return parent::setBigUrl($bigUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getBigUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBigUrl', array());

        return parent::getBigUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setThumbUrl($thumbUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThumbUrl', array($thumbUrl));

        return parent::setThumbUrl($thumbUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getThumbUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThumbUrl', array());

        return parent::getThumbUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setMember(\Entities\Members $member = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMember', array($member));

        return parent::setMember($member);
    }

    /**
     * {@inheritDoc}
     */
    public function getMember()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMember', array());

        return parent::getMember();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberId($memberId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberId', array($memberId));

        return parent::setMemberId($memberId);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberId', array());

        return parent::getMemberId();
    }

}
